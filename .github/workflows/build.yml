name: Linux Build Sniper

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull requests targeting main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest  # GitHub-hosted runner with Ubuntu
    container:
      image: registry.gitlab.steamos.cloud/steamrt/sniper/sdk:latest  # Official Sniper SDK container
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Checks out your repository code
        with:
          ref: f55fadec8a0e80433962ef29159b97faacb86dd2
        

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y megatools # Add unzip for extraction

      - name: Download assets zip
        run: |
          curl -L -o Ablockalypse-Background-Music.zip "https://ablockalypse-assets.s3.us-west-2.amazonaws.com/Ablockalypse-Background-Music.zip"
          mv Ablockalypse-Background-Music.zip assets.zip

      - name: Extract assets
        run: |
          unzip -o assets.zip -d temp_assets/  # Extract to a temporary directory
          rm assets.zip  # Clean up the zip file

      - name: Copy assets to assets folder
        run: |
          mkdir -p assets  # Ensure assets folder exists
          cp -r temp_assets/assets/* assets/  # Copy extracted contents to assets/
          rm -r temp_assets/  # Clean up temporary directory

      - name: List assets folder contents
        run: |
          echo "Contents of assets/:"
          ls -la assets/ || echo "assets/ directory is empty or does not exist"
          echo "Contents of assets/audio/music/:"
          ls -la assets/audio/music/ || echo "assets/audio/music/ directory is empty or does not exist"

      - name: Configure build
        run: |
          # Example for CMake; adjust based on your build system
          #cmake -S . -B build

      - name: Build game
        run: |
          # Example for CMake; adjust based on your build system
          # cmake --build build --config Release
          make BUILD_TYPE="full"

      - name: Package game
        run: |
          mkdir -p dist  # Create a distribution directory
          cp sdl2-blocks dist/  # Copy the executable
          cp -r assets dist/  # Copy the assets directory

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: game-package
          path: dist/  # Upload the dist directory directly